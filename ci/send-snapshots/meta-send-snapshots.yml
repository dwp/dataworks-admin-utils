meta-send-snapshots:
  plan:
    send-snapshots:
      task: send-snapshots
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_python_boto_behave_repository))
            tag: ((dataworks.docker_python_boto_behave_version))
        params:
          AWS_REGION: ((dataworks.aws_region))
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
          E2E_TEST_TIMEOUT: 300
        run:
          dir: dataworks-behavioural-framework
          path: sh
          args:
            - -exc
            - |
              source /assume-role
              set +x
              cd src/runners
              ./run-ci.sh \
              "../../../meta"
        inputs:
          - name: dataworks-behavioural-framework
          - name: meta

    terraform-output-internal-compute:
      task: terraform-output-internal-compute
      .: (( inject meta.plan.terraform-common-config ))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.terraform_repository))
            tag: ((dataworks.terraform_version))
        run:
          path: sh
          args:
            - -exc
            - |
              terraform workspace show
              terraform init
              terraform output --json > ../terraform-output-internal-compute/outputs.json
          dir: aws-internal-compute
        inputs:
          - name: aws-internal-compute
        outputs:
          - name: terraform-output-internal-compute

    upload-heartbeat-files:
      task: upload-heartbeat-files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_REGION: ((dataworks.aws_region))
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
          ASSUME_DURATION: 14400
        run:
          path: sh
          args:
            - -exc
            - |
              source /assume-role
              set +x

              S3_BUCKET=$(cat ../terraform-output-internal-compute/outputs.json | jq -r '.htme_s3_bucket.value.id')
              S3_PREFIX=$(cat ../terraform-output-internal-compute/outputs.json | jq -r '.htme_s3_folder.value.id')
              S3_LOCATION="s3://${S3_BUCKET}/${S3_PREFIX}/NIFI_HEARTBEAT/full/" 

              echo "S3 location is '${S3_LOCATION}'"
              cd files/snapshot-sender/heartbeat_files

              echo "Listing local files"
              ls

              aws s3 cp . "${S3_LOCATION}" --recursive
          dir: aws-snapshot-sender
        inputs:
          - name: terraform-output-internal-compute
          - name: aws-snapshot-sender
