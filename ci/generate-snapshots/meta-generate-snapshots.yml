meta-generate-snapshots:
  plan:
    generate-snapshots:
      task: generate-snapshots
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker-python-boto-behave.repository))
            version: ((docker-python-boto-behave.version))
            tag: ((docker-python-boto-behave.version))
        params:
          AWS_DEFAULT_PROFILE: ci
          AWS_SHARED_CREDENTIALS_FILE: ../../.aws/credentials
          AWS_CONFIG_FILE: ../../.aws/config
          E2E_TEST_TIMEOUT: 300
        run:
          dir: aws-dataworks-e2e-framework
          path: sh
          args:
            - -exc
            - |
              export E2E_FEATURE_TAG_FILTER="@admin-generate-${SNAPSHOT_TYPE}-snapshots"
              cd src/runners
              ./run-ci.sh \
              "../../../meta" \
              "../../../terraform-output-ingest/outputs.json" \
              "../../../terraform-output-internal-compute/outputs.json" \
              "../../../terraform-output-snapshot-sender/outputs.json"
        inputs:
          - name: aws-dataworks-e2e-framework
          - name: .aws
          - name: meta
          - name: terraform-output-ingest
          - name: terraform-output-internal-compute
          - name: terraform-output-snapshot-sender

    clear-s3-prefix:
      task: clear-s3-prefix
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((docker-awscli.repository))
            version: ((docker-awscli.version))
            tag: ((docker-awscli.version))
        params:
          AWS_DEFAULT_PROFILE: ci
          AWS_SHARED_CREDENTIALS_FILE: .aws/credentials
          AWS_CONFIG_FILE: .aws/config
        run:
          path: sh
          args:
          - -exc
          - |
            if [[ "${TYPE}" == "htme_output" ]]; then
                S3_BUCKET=$(cat terraform-output-internal-compute/outputs.json | jq -r '.htme_s3_bucket.value.id')
                S3_PREFIX=$(cat terraform-output-internal-compute/outputs.json | jq -r '.htme_s3_folder.value.id')
            elif [[ "${TYPE}" == "htme_manifest" ]]; then
                S3_BUCKET=$(cat terraform-output-ingest/outputs.json | jq -r '.s3_buckets.value.input_bucket')
                S3_PREFIX=$(cat terraform-output-internal-compute/outputs.json | jq -r '.manifest_s3_prefixes.value.export')
            else
              echo "Invalid type of '${TYPE}'"
              exit 1
            fi

            S3_LOCATION="s3://${S3_BUCKET}/${S3_PREFIX}/" 
            TIMEOUT=3600
            
            aws s3 rm "${S3_LOCATION}" --recursive

            TIME_TAKEN=1
            while true; do
                if [[ ${TIME_TAKEN} > ${TIMEOUT} ]]; then
                    break
                fi

                if [[ -z $(aws s3 ls "${S3_LOCATION}") ]]; then
                    break
                fi

                TIME_TAKEN=$((TIME_TAKEN + 1))
                sleep 1
            done
        inputs:
        - name: .aws
        - name: terraform-output-ingest
        - name: terraform-output-internal-compute
