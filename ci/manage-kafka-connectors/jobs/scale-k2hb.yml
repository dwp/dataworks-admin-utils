jobs:
  - name: development-scale-down-k2hb
    max_in_flight: 1
    plan:
      - .: (( inject meta-manage-kafka-connector.plan.scale-down-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer
            DESIRED_COUNT: 0

  - name: qa-scale-down-k2hb
    max_in_flight: 1
    plan:
      - .: (( inject meta-manage-kafka-connector.plan.scale-down-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer
            DESIRED_COUNT: 0

  - name: integration-scale-down-k2hb
    max_in_flight: 1
    plan:
      - .: (( inject meta-manage-kafka-connector.plan.scale-down-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: "arn:aws:iam::((aws_account.integration)):role/ci"
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer
            DESIRED_COUNT: 0

  - name: preprod-scale-down-k2hb
    max_in_flight: 1
    plan:
      - .: (( inject meta-manage-kafka-connector.plan.scale-down-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer
            DESIRED_COUNT: 0

  - name: production-scale-down-k2hb
    max_in_flight: 1
    plan:
      - .: (( inject meta-manage-kafka-connector.plan.scale-down-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: "arn:aws:iam::((aws_account.production)):role/ci"
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer
            DESIRED_COUNT: 0

  - name: development-scale-up-k2hb
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta.plan.terraform-output-ingest ))
      - .: (( inject meta-manage-kafka-connector.plan.scale-up-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer

  - name: qa-scale-up-k2hb
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta-manage-kafka-connector.plan.scale-up-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer

  - name: integration-scale-up-k2hb
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: integration
      - .: (( inject meta-manage-kafka-connector.plan.scale-up-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.integration)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer

  - name: preprod-scale-up-k2hb
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta-manage-kafka-connector.plan.scale-up-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer

  - name: production-scale-up-k2hb
    max_in_flight: 1
    plan:
      - in_parallel:
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: production
      - .: (( inject meta-manage-kafka-connector.plan.scale-up-kafka-connector ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.production)):role/ci
            ECS_CLUSTER: main
            ECS_SERVICE: kafka-to-hbase-consumer
