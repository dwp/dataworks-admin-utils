meta-adg-emr-admin:
  plan:
    start-cluster:
      task: start-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x
              export topic_arn=arn:aws:sns:${AWS_DEFAULT_REGION}:${AWS_ACC}:export_status_sns_fulls

              export message_json=$(cat <<EOF
              {
                "correlation_id": "$CORRELATION_ID",
                "s3_prefix": "$S3_PREFIX",
                "snapshot_type": "$SNAPSHOT_TYPE",
                "export_date": "$EXPORT_DATE"
              }
              EOF
              )
              echo $message_json
              aws sns publish --topic-arn "$topic_arn" --message "$message_json"

    stop-cluster:
      task: stop-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x

              echo "Stopping clusters for ${SNAPSHOT_TYPE}"

              if [[ "${SNAPSHOT_TYPE}" == "full" ]]; then
                for CLUSTER_ID in $(aws emr list-clusters --active | jq -r '.Clusters[] | select(.Name | test("analytical-dataset-generator-full")) | .Id');
                do
                  echo "Stopping cluster with id of ${CLUSTER_ID}"
                  aws emr terminate-clusters --cluster-ids $CLUSTER_ID
                done
              else
                for CLUSTER_ID in $(aws emr list-clusters --active | jq -r '.Clusters[] | select(.Name | test("analytical-dataset-generator-incremental")) | .Id');
                do
                  echo "Stopping cluster with id of ${CLUSTER_ID}"
                  aws emr terminate-clusters --cluster-ids $CLUSTER_ID
                done
              fi

    clear-dynamodb-row:
      task: clear-dynamodb-row
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x

              export message_json=$(cat <<EOF
              {
                "Correlation_Id": {"S": "$CORRELATION_ID"},
                "DataProduct": {"S": "$DATA_PRODUCT"}
              }
              EOF
              )
              echo $message_json

              aws dynamodb delete-item \
              --table-name data_pipeline_metadata \
              --key "$message_json"
