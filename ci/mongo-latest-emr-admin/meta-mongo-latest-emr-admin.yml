meta-mongo-latest-emr-admin:
  plan:
    clear-dynamodb-row:
      task: clear-dynamodb-row
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x

              export message_json=$(cat <<EOF
              {
                "Correlation_Id": {"S": "$CORRELATION_ID"},
                "DataProduct": {"S": "$DATA_PRODUCT"}
              }
              EOF
              )
              echo $message_json

              aws dynamodb delete-item \
              --table-name data_pipeline_metadata \
              --key "$message_json"

    start-cluster:
      task: start-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x

              jq -n --arg correlation_id "$CORRELATION_ID" --arg export_date "$EXPORT_DATE" '{
                 "correlation_id": $correlation_id,
                 "s3_prefix": "NOT_SET",
                 "snapshot_type": "incremental",
                 "export_date": $export_date
               }' > payload.json

              cat payload.json
              aws lambda invoke --function-name mongo_latest_emr_launcher --invocation-type RequestResponse --payload file://payload.json --cli-connect-timeout 600 --cli-read-timeout 600 output.json

    stop-cluster:
      task: stop-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x
              for CLUSTER_ID in $(aws emr list-clusters --active | jq -r '.Clusters[] | select(.Name | test("mongo-latest")) | .Id');
              do
                aws emr terminate-clusters --cluster-ids $CLUSTER_ID
              done
