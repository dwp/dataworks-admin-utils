meta-kickstart-adg-emr-admin:
  plan:
    start-cluster:
      task: start-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x
              export topic_arn=arn:aws:sns:${AWS_DEFAULT_REGION}:${AWS_ACC}:trigger_kickstart_adg_process
              export message_json=$(cat <<EOF
              {
                "additional_step_args": {
                    "submit-job-vacancy": ["--module_name", "vacancy", "--start_dt", "$START_DT", "--end_dt", "$END_DT", "--load_type", "$LOAD_TYPE", "--skip_flag", "$SKIP_FLAG", "--skip_modules", "$SKIP_MODULES"],
                    "submit-job-application": ["--module_name", "application", "--start_dt", "$START_DT", "--end_dt", "$END_DT", "--load_type", "$LOAD_TYPE", "--skip_flag", "$SKIP_FLAG", "--skip_modules", "$SKIP_MODULES"]
                    }
              }
              EOF
              )
              echo $message_json
              aws sns publish --topic-arn "$topic_arn" --message "$message_json"

    start-cluster-without-application:
      task: start-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x
              export topic_arn=arn:aws:sns:${AWS_DEFAULT_REGION}:${AWS_ACC}:trigger_kickstart_adg_process
              export message_json=$(cat <<EOF
              {
                "additional_step_args": {
                    "submit-job-vacancy": ["--module_name", "vacancy", "--start_dt", "$START_DT", "--end_dt", "$END_DT", "--load_type", "$LOAD_TYPE", "--skip_flag", "$SKIP_FLAG", "--skip_modules", "$SKIP_MODULES"]
                    }
              }
              EOF
              )
              echo $message_json
              aws sns publish --topic-arn "$topic_arn" --message "$message_json"

    stop-cluster:
      task: stop-cluster
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            version: ((dataworks.docker_awscli_version))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              export AWS_DEFAULT_REGION
              source /assume-role
              set +x
              for CLUSTER_ID in $(aws emr list-clusters --active | jq -r '.Clusters[] | select(.Name | test("kickstart-adg")) | .Id');
              do
              aws emr terminate-clusters --cluster-ids $CLUSTER_ID
              done
